<?xml version="1.0" encoding="UTF-8"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="CyberCommands">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit4_4.1.0.1/junit-4.1.jar"/>
    </path>
    <path id="CyberCommands.classpath">
        <pathelement location="."/>
        <pathelement location="ant-1.6.5.jar"/>
        <pathelement location="ant-antlr-1.6.5.jar"/>
        <pathelement location="ant-junit-1.6.5.jar"/>
        <pathelement location="ant-launcher-1.6.5.jar"/>
        <pathelement location="ant-swing-1.6.5.jar"/>
        <pathelement location="antlr-2.7.6.jar"/>
        <pathelement location="asm-attrs.jar"/>
        <pathelement location="asm.jar"/>
        <pathelement location="c3p0-0.9.1.jar"/>
        <pathelement location="cglib-2.1.3.jar"/>
        <pathelement location="checkstyle-all.jar"/>
        <pathelement location="cleanimports.jar"/>
        <pathelement location="commons-collections-2.1.1.jar"/>
        <pathelement location="commons-logging-1.0.4.jar"/>
        <pathelement location="concurrent-1.3.2.jar"/>
        <pathelement location="connector.jar"/>
        <pathelement location="dom4j-1.6.1.jar"/>
        <pathelement location="ehcache-1.2.3.jar"/>
        <pathelement location="hibernate3.jar"/>
        <pathelement location="jaas.jar"/>
        <pathelement location="jacc-1_0-fr.jar"/>
        <pathelement location="javassist.jar"/>
        <pathelement location="jaxen-1.1-beta-7.jar"/>
        <pathelement location="jboss-cache.jar"/>
        <pathelement location="jboss-common.jar"/>
        <pathelement location="jboss-jmx.jar"/>
        <pathelement location="jboss-system.jar"/>
        <pathelement location="jdbc2_0-stdext.jar"/>
        <pathelement location="jgroups-2.2.8.jar"/>
        <pathelement location="jta.jar"/>
        <pathelement location="junit-3.8.1.jar"/>
        <pathelement location="log4j-1.2.11.jar"/>
        <pathelement location="mysql-connector-java-5.0.6-bin.jar"/>
        <pathelement location="oscache-2.1.jar"/>
        <pathelement location="proxool-0.8.3.jar"/>
        <pathelement location="swarmcache-1.0rc2.jar"/>
        <pathelement location="syndiag2.jar"/>
        <pathelement location="versioncheck.jar"/>
        <pathelement location="xerces-2.6.2.jar"/>
        <pathelement location="xml-apis.jar"/>
        <pathelement location="commons-cli-1.0.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <target name="init">
        <copy includeemptydirs="false" todir=".">
            <fileset dir="." excludes="**/*.uad, **/*.ucd, **/*.uld, **/*.upd, **/*.udd, **/*.uod, **/*.usd, **/*.utd, **/*.uud, **/*.odd, **/*.ead, **/*.ecd, **/*.eld, **/*.epd, **/*.edd, **/*.eod, **/*.esd, **/*.etd, **/*.eud, **/*.urd*.uml, **/*.ecore, **/*.launch, **/*.java"/>
        </copy>
    </target>
    <target name="clean">
        <delete>
            <fileset dir="." includes="**/*.class"/>
        </delete>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="." source="${source}" target="${target}">
            <src path="."/>
            <classpath refid="CyberCommands.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="readOneFile">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.nodbconnection.ReadOneFile" todir="${junit.output.dir}"/>
            <classpath refid="CyberCommands.classpath"/>
        </junit>
    </target>
    <target name="Run All CyberCommands Tests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.databaseconnection.SurfaceDBAndInsertOnePA" todir="${junit.output.dir}"/>
            <test name="test.databaseconnection.SurfaceDBConnection" todir="${junit.output.dir}"/>
            <test name="test.nodbconnection.ReadOneFile" todir="${junit.output.dir}"/>
            <test name="test.nodbconnection.SpectralAccelerationFileHandling" todir="${junit.output.dir}"/>
            <test name="test.nodbconnection.TraverseDirectories" todir="${junit.output.dir}"/>
            <classpath refid="CyberCommands.classpath"/>
        </junit>
    </target>
    <target name="Run All DB Connection Tests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.databaseconnection.SurfaceDBAndInsertOnePA" todir="${junit.output.dir}"/>
            <test name="test.databaseconnection.SurfaceDBConnection" todir="${junit.output.dir}"/>
            <classpath refid="CyberCommands.classpath"/>
        </junit>
    </target>
    <target name="Run All Non-DB Connection Tests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.nodbconnection.ReadOneFile" todir="${junit.output.dir}"/>
            <test name="test.nodbconnection.SpectralAccelerationFileHandling" todir="${junit.output.dir}"/>
            <test name="test.nodbconnection.TraverseDirectories" todir="${junit.output.dir}"/>
            <classpath refid="CyberCommands.classpath"/>
        </junit>
    </target>
    <target name="SpectralAccelerationFileHandling">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.nodbconnection.SpectralAccelerationFileHandling" todir="${junit.output.dir}"/>
            <classpath refid="CyberCommands.classpath"/>
        </junit>
    </target>
    <target name="TraverseDirectories">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.nodbconnection.TraverseDirectories" todir="${junit.output.dir}"/>
            <classpath refid="CyberCommands.classpath"/>
        </junit>
    </target>
    <target name="CyberLoadamps traverse directory">
        <java classname="commands.CyberLoadamps" failonerror="true" fork="yes">
            <arg line="-p safiles/traversetest -site USC"/>
            <classpath refid="CyberCommands.classpath"/>
        </java>
    </target>
    <target name="CyberLoadamps -help">
        <java classname="commands.CyberLoadamps" failonerror="true" fork="yes">
            <arg line="-help"/>
            <classpath refid="CyberCommands.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
